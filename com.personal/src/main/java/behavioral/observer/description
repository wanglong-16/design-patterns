假设 学校铃声是一个发布者，老师和学生都需要监听铃声来做出响应。

发布订阅模式，消息队列是最常见的场景，例如 mq.
观察者模式非常常见，近年来逐渐流行的响应式编程就是观察者模式的应用之一。观察者模式的思想就是一个对象发生一个事件后
，逐一通知监听着这个对象的监听者，监听者可以对这个事件马上做出响应。


观察者模式（Observer Pattern）：
定义对象间的一种一对多的依赖关系，当一个对象的状态发生改变时，所有依赖于它的对象都得到通知并被自动更新。

被观察者中维护了一个观察者列表，提供了三个方法：

addObserver：将 observer 对象添加到观察者列表中
removeObserver：将 observer 对象从观察者列表中移除
notifyObservers：通知所有观察者有事件发生，具体实现是调用所有观察者的 update 方法

接口中只有一个 update 方法，用于对被观察者发出的事件做出响应。